// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: oyster/entities/pb/payment/domain/v1/currency.proto

package domainv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Currency int32

const (
	Currency_CURRENCY_UNSPECIFIED Currency = 0
	Currency_CURRENCY_MXN         Currency = 1
	Currency_CURRENCY_USD         Currency = 2
	Currency_CURRENCY_CAD         Currency = 3
	Currency_CURRENCY_BRL         Currency = 4
	Currency_CURRENCY_COP         Currency = 5
)

// Enum value maps for Currency.
var (
	Currency_name = map[int32]string{
		0: "CURRENCY_UNSPECIFIED",
		1: "CURRENCY_MXN",
		2: "CURRENCY_USD",
		3: "CURRENCY_CAD",
		4: "CURRENCY_BRL",
		5: "CURRENCY_COP",
	}
	Currency_value = map[string]int32{
		"CURRENCY_UNSPECIFIED": 0,
		"CURRENCY_MXN":         1,
		"CURRENCY_USD":         2,
		"CURRENCY_CAD":         3,
		"CURRENCY_BRL":         4,
		"CURRENCY_COP":         5,
	}
)

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_oyster_entities_pb_payment_domain_v1_currency_proto_enumTypes[0].Descriptor()
}

func (Currency) Type() protoreflect.EnumType {
	return &file_oyster_entities_pb_payment_domain_v1_currency_proto_enumTypes[0]
}

func (x Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currency.Descriptor instead.
func (Currency) EnumDescriptor() ([]byte, []int) {
	return file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDescGZIP(), []int{0}
}

type CurrencyRate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Currency Currency `protobuf:"varint,1,opt,name=currency,proto3,enum=oyster.entities.pb.payment.domain.v1.Currency" json:"currency,omitempty"`
	Rate     float64  `protobuf:"fixed64,2,opt,name=rate,proto3" json:"rate,omitempty"`
}

func (x *CurrencyRate) Reset() {
	*x = CurrencyRate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_oyster_entities_pb_payment_domain_v1_currency_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrencyRate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrencyRate) ProtoMessage() {}

func (x *CurrencyRate) ProtoReflect() protoreflect.Message {
	mi := &file_oyster_entities_pb_payment_domain_v1_currency_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrencyRate.ProtoReflect.Descriptor instead.
func (*CurrencyRate) Descriptor() ([]byte, []int) {
	return file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDescGZIP(), []int{0}
}

func (x *CurrencyRate) GetCurrency() Currency {
	if x != nil {
		return x.Currency
	}
	return Currency_CURRENCY_UNSPECIFIED
}

func (x *CurrencyRate) GetRate() float64 {
	if x != nil {
		return x.Rate
	}
	return 0
}

var File_oyster_entities_pb_payment_domain_v1_currency_proto protoreflect.FileDescriptor

var file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDesc = []byte{
	0x0a, 0x33, 0x6f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x24, 0x6f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x65, 0x6e,
	0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x22, 0x6e, 0x0a, 0x0c, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x61, 0x74, 0x65, 0x12, 0x4a, 0x0a, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2e, 0x2e,
	0x6f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e,
	0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x08, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x61, 0x74, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x61, 0x74, 0x65, 0x2a, 0x7e, 0x0a, 0x08, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x55, 0x52, 0x52, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x4d, 0x58,
	0x4e, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f,
	0x55, 0x53, 0x44, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43,
	0x59, 0x5f, 0x43, 0x41, 0x44, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45,
	0x4e, 0x43, 0x59, 0x5f, 0x42, 0x52, 0x4c, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52,
	0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x43, 0x4f, 0x50, 0x10, 0x05, 0x42, 0xc9, 0x02, 0x0a, 0x28,
	0x63, 0x6f, 0x6d, 0x2e, 0x6f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x65, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x2e, 0x70, 0x62, 0x2e, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x64,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x76, 0x31, 0x42, 0x0d, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x54, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x61, 0x79, 0x64, 0x6f, 0x6f, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x62, 0x6f, 0x69, 0x6c, 0x65, 0x72, 0x70, 0x6c, 0x61, 0x74, 0x65, 0x2f, 0x67,
	0x6f, 0x2f, 0x6f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x2f, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65,
	0x73, 0x2f, 0x70, 0x62, 0x2f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x2f, 0x76, 0x31, 0x3b, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x76, 0x31, 0xa0,
	0x01, 0x01, 0xa2, 0x02, 0x05, 0x4f, 0x45, 0x50, 0x50, 0x44, 0xaa, 0x02, 0x24, 0x4f, 0x79, 0x73,
	0x74, 0x65, 0x72, 0x2e, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x2e, 0x50, 0x62, 0x2e,
	0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x2e, 0x56,
	0x31, 0xca, 0x02, 0x24, 0x4f, 0x79, 0x73, 0x74, 0x65, 0x72, 0x5c, 0x45, 0x6e, 0x74, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x5c, 0x50, 0x62, 0x5c, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0xe2, 0x02, 0x30, 0x4f, 0x79, 0x73, 0x74, 0x65,
	0x72, 0x5c, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x5c, 0x50, 0x62, 0x5c, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5c, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x5c, 0x56, 0x31, 0x5c,
	0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02, 0x29, 0x4f, 0x79,
	0x73, 0x74, 0x65, 0x72, 0x3a, 0x3a, 0x45, 0x6e, 0x74, 0x69, 0x74, 0x69, 0x65, 0x73, 0x3a, 0x3a,
	0x50, 0x62, 0x3a, 0x3a, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x3a, 0x3a, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x3a, 0x3a, 0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDescOnce sync.Once
	file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDescData = file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDesc
)

func file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDescGZIP() []byte {
	file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDescOnce.Do(func() {
		file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDescData = protoimpl.X.CompressGZIP(file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDescData)
	})
	return file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDescData
}

var file_oyster_entities_pb_payment_domain_v1_currency_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_oyster_entities_pb_payment_domain_v1_currency_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_oyster_entities_pb_payment_domain_v1_currency_proto_goTypes = []interface{}{
	(Currency)(0),        // 0: oyster.entities.pb.payment.domain.v1.Currency
	(*CurrencyRate)(nil), // 1: oyster.entities.pb.payment.domain.v1.CurrencyRate
}
var file_oyster_entities_pb_payment_domain_v1_currency_proto_depIdxs = []int32{
	0, // 0: oyster.entities.pb.payment.domain.v1.CurrencyRate.currency:type_name -> oyster.entities.pb.payment.domain.v1.Currency
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_oyster_entities_pb_payment_domain_v1_currency_proto_init() }
func file_oyster_entities_pb_payment_domain_v1_currency_proto_init() {
	if File_oyster_entities_pb_payment_domain_v1_currency_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_oyster_entities_pb_payment_domain_v1_currency_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrencyRate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_oyster_entities_pb_payment_domain_v1_currency_proto_goTypes,
		DependencyIndexes: file_oyster_entities_pb_payment_domain_v1_currency_proto_depIdxs,
		EnumInfos:         file_oyster_entities_pb_payment_domain_v1_currency_proto_enumTypes,
		MessageInfos:      file_oyster_entities_pb_payment_domain_v1_currency_proto_msgTypes,
	}.Build()
	File_oyster_entities_pb_payment_domain_v1_currency_proto = out.File
	file_oyster_entities_pb_payment_domain_v1_currency_proto_rawDesc = nil
	file_oyster_entities_pb_payment_domain_v1_currency_proto_goTypes = nil
	file_oyster_entities_pb_payment_domain_v1_currency_proto_depIdxs = nil
}
